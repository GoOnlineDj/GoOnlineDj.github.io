
======================================================
Unix is an operating system that was built on the idea of modular design, which means that each tool or command is designed to do one thing well. This philosophy is known as the Unix philosophy
======+++++Everything is a file in Linux+++++=========
<!-- & = run in the background -->
<!-- find *.txt = FIND ALL TXT FILES = COOL  -->
================================
<!-- 
    Emulator runs the shells inside of it e.g terminal -->
0 = TRUE
1 = false
+++++++++++++++++++++
++++++++++++++++
||||||||||||||||||||||
++++++++++++++++++++++++++
===============================
the shell is bash Bourne Again Shell + GNU Foundation

<!-- command line + CLI -->
TRY NOT TO COPY AND PASTE INTO THE COMMAND LINE DIRECTLY
IS NOT SAFE TO COPY AND PASTE INTO THE COMMAND LINE.

control + d = to exit a program
pwd = present working directory
{clear} or ctrl+L to clear
tab = tab+key = very powerful
!! = to rerun last command = !bang !bang
<!-- !! can be inserted into another command -->
example = sudo !!


ctrl + r = reverse search bash history 
/ = root directory
==================
ls = {list} it list items inside a directory
ls is a command or program that has allot of flags
=================

<!-- +++ORDER MATTERS PUT COMMAND FIRST THEN FLAGS+++ -->

====flags===
--help = one long flag
-l = might be more flgs
-a = might be more flgs
-la
-s = size
-h = human readable
-lash
ls -I = ignore
ls --ignore
-f = keep watching a file in real time
====flags===
cd = to change directory
.. = relative path
cd .. to up one directory
cd ../.. up two directory
cd ../ubuntu/../ubuntu/
cd home relative to where you are
cd folder i know there is a folder with this name
cd tab auto complete tab auto complete
cd ../ubuntu/../ubuntu/
cd ~ = home directory
cd ~/home

<!-- ls home {home} here is a perameter or argument = an argument is like textual info that you are providing to a
    program. -->
ls {-l} = wil provide more info the long form output.
ls -a, --all will list all the items including hidden items
ls -l -a
ls -la
ls -lash

echo = like console.log
echo "hi my name is Michael"
echo "hi computer speak to me"

which ls
which = what the path is to the program that you'r running

bin = binary = folder where ALL the PROGRAMS are kept 

touch .hidden = to create a hidden file {needs the .}

touch Michael.txt = to create a regular text file.

ls --ignore=michael or --ignore michael
ls --ignore=michael --ignore=michael2

yes = yes program = ANSWERS YES FOREVER until it is stopped

=========Shortcuts==========
CTRL + A = takes you to the beginning of the line
CTRL + E = takes you to the end of the line
CTRL + K = "yank" everything after the cursor
CTRL + U = "yank" everything before the cursor
CTRL + Y = "paste" (paste in quotes because it doesn't actually go into your system clipboard) everything you
yanked
CTRL + L = clear the screen
CTRL + R = reverse search through history

git --help 


========Signals ==========
CTRL + C = SIGINT
CTRL + D = SIGQUIT
SIGTERM = computer sends this to end all programs
kill -9 or kill -SIGKILL
kill -9 then program number = to kill a program
kill -l will show all the signals your computer supports.

yes > /dev/null &
ps aux | grep yes
kill -9 ####
kill -SIGKILL ####

kill -l = for list of flags for kill


=============
head = first 10 lines
head -n 3 ~/.bash_history = only first 3 lines
tail ~/.bash_history
tail -n 3 ~/.bash_history = only last 3 lines
tail -f ~/.bash_history
tail = last 10 lines
tail -f ~/.bash_history = keep watching a file in real time as things get added to it

cat michael.txt = to read a file
>> = pins new text to the end of a file = append


<!-- +++++++++===========+++++++++++
    connect two shells to watch update in real time 
    +++++++++===========+++++++++++
    multipass shell primary
    echo hi michael >> williams.txt 
    +++++++++===========+++++++++++ -->


=====nana===========
nano Michael.txt
ctrl + o = save
ctrl + x = exit
===============

=====vim==========
ed ed.txt
ex mix.txt
=================
vim mmm.txt = to create a txt file in vim
i = write
:d100 = delete 100 lines
esc = command mode
:w = save
:help tutor = vim tutor ======
:wq = save and quit
:q = quit 
:q! = quit
:qa! = quitNOW
================
=====vi=======
:wq! = quit NOW
=================

Ubuntu

-zsh

==========================

Interacting with Files

++++++++++++++++++++++++++
=========less==========
less Michael.txt = allows you to read a File
/hey to search within the file while in less
q = quit
===============================
=============cat============
cat = concatanate files to standard out
cat michael.txt = prints raw text quick like less

======================

======man=============
man = manual for a program
man echo
man less
q = quit
==============================
=========reate a new director or folder=========
mkdir MJW = create a new director or folder
-p = make multiple nested folders
mkdir -p hi/my/name/is/michael
mkdir --help
=============================


======touch======= CREATE+++CREATE======
touch you-are-so-cool.txt = create a new text File
touch a.txt b.txt c.txt d.txt e.txt f.txt
touch you-are-so-cool.txt = update the modifyTIME
//////////////////
touch goodyear{2003,2007,2009,2013,2015,2017,2020,2024}.txt
<!-- ====NOTE , CAN BE ADDED TO LEAVE BLANK====== -->
////////////////

=============================
=====+++++++++++======
<!-- ITEMS ARE GONE FOREVER after rm command  -->
rm = remove
rm you-are-so-cool.txt = delete file
-r = recursive delete
rm -r my-folder = delete folder
-f = force  
rm -rf my-folder = delete folder

<!-- NO * NO NO  -->

<!-- package call trash to save delete files up to 30 days  -->
===========================

====================
====TO COPY FILES====
cp = copy
cp williams.txt williams1983.txt
=================

<!-- mv = move + rename the file or folder by moving it to a new file or folder with that new name -->
mv MJW MJW2024 = rename the files


==========================

tar = compressing files and folders for speed and memory
tar -cf computer.tar folder1983 junior.txt = archive
tar -zcf computer.tar.gz folder1983 junior.txt = GZIP
mkdir extracted
mv computer.tar.gz extracted
cd extracted
 mkdir destination
tar -xzf archive.tar.gz -C destination = unzip items



===================================
========SEARCHING FOR FILES======== 
ls goodyear-* = wild card search
ls file*.txt = only ONE SHOWED UP file.txt
ls file* = all files that start with file
ls file? = with one character after file
ls file?? = with two character after file
<!-- mkdir folder41
    cd folder41
    touch gyear{1983..2024} = wow this is beautiful -->
=======================================
touch gchar{a..z}
rm gchar{a..z}
touch gchar={a..z}
<!-- touch Michael\*Williams.txt = ADD * to file name -->
============================
<!-- echo {a..z}
    a b c d e f g h i j k l m n o p q r s t u v w x y z
    echo {1983..2024}
    1983 1984 1985 1986 1987 1988 1989 1990 1991 1992 1993 1994 1995 1996 1997 1998 1999 2000 2001 2002 2003 2004 2005
    2006
    2007 2008 2009 2010 2011 2012 2013 2014 2015 2016 2017 2018 2019 2020 2021 2022 2023 2024 -->
==================================
<!-- echo {a..z..2}
    a c e g i k m o q s u w y
    echo {0..20..2}
    0 2 4 6 8 10 12 14 16 18 20
    echo {0..20..5}
    0 5 10 15 20 -->
echo {A..Z}{1..2}
==================================
<!-- echo {A..Z..10}
    A K U
    echo {a..Z..10}
    a
    echo {A..z..10}
    A K U _ i s -->
echo {A..Z}{01..02}{1..2}
========================================
+++++++++++++++++++++++++++++++++++++++++
==========output streams========
<!-- stdout = 1> 
echo 'this is my text' 1> newfile.txt
////////////
> = replace
>> = append
///////////////////////
    stderr = 2> -->
++++++++++++++++++++++++++++++++++
mkdir streams
cd streams/
echo 'this is my text for output' 1> new-file.txt = replace files with new text
cat new-file.txt
cat new-file.txt 1> another-file.txt = replace text
<!-- cat new-file.txt 1>> another-file.txt = add more text to file. -->
ls -lash 1> savedfile.txt
cat savedfile.txt
ls 1> ls.txt
cat ls.txt
-----------------------------------
==========output streams========
====================================
cat no-such-file.txt 2> error.txt
cat error.txt
ls -lash 1> ls01.txt 2> lserr.txt
ls -lash > ls100.txt = both output and error to same place
cat ls100.txt
ls -lash >> ls100.txt = append text
ls -lash 2> /dev/null = output to null
ls -lash 1> /dev/null = error to null
ls -lash 1> ls.txt 2> ls-error.txt
<!-- cat some-file.txt 1> /dev/null = show output error
    cat some-file.txt 2> /dev/null = error gone forever -->
==========output streams========
============================================

====================================
====================================

==========input streams========
====================================
grep = find or search for an item in list
<!-- cat < williams1983.txt=files input into cat 
    cat williams1983.txt=cat reading text file  -->
grep 'cool' < williams1983.txt=to find cool in doc grep 'error.txt' < ls01.txt 1> grep.txt 2> /dev/null
    cat grep.txt

    ps aux = output all the current running processes
    <!-- ps aux | grep 'ps aux' = find  -->
    & = keep running in background.
    yes > /dev/null & = keep running yes in background.
    ps aux | grep 'yes'
    kill -9 #### to kill yes
    ============================
    ======pipe==============
    =========================
    no | rm -i file*
    yes n | rm -i hi*
    yes n | rm -i hi*
    ==============================
    ps aux = find all running processes
    ==============================
    whoami = what program am i currently in
    ==============================

    =======LIST ALL USERS ON COMPUTER================
    cat /etc/passwd = all the users on the computer at t particular time. -->
    ==============================
    superuser = root user
    whoami = ubuntu
    sudo whoami = root = from root dir
    su = switch user
    ==============================

    ====TO BECOME SUPER USER====
    sudo su = will make u root user  
    exit = exit from root user account
    ==============================
    sudo = usually ask for password
    ubuntu is a password less environment
    ++++++++++++++++++++++++++
    =========================================
    =============ADD NEW USER================
    sudo useradd Michael
    sudo passwd Michael
    ================================
    exit = exit current session to become ROOT
    +++TO MAKE USER AN ADMIN+++
    ==============================
     sudo usermod -aG sudo Michael = add user to sudo group
     -aG = --append --groups
     su Michael
     sudo whoami
    ==================
    check permissions for ubuntu
    ls -ld ubuntu
    =====================
    unable to change to ubuntu folder
    sudo chmod 755 ubuntu 
    permissions change = ok
    able to access folder now as GirlMeetGuy
    =====================

    exit = exit current session to become ROOT
    ==============================
    
   

    ================================
  

    ==Changing Permissions on a File or directory==
    ===========================
    ===============
    -rw-rw-r-- = normal files
    drwxr-x--- = directory files
    ======================
    <!-- rwx = read + write + excecute
        first rwx = user
        second rwx = grounp
        thrid rwx = all others -->
    ============================
    . = current directory
    ================

    sudo mkdir hello
    touch hello.txt = unable to touch file
    ls -lash

    =====Change OWNERSHIP FROM ROOT DIRECTORY=====
    switch to ubuntu and to root directory
    ubuntu@primary:/hello$ sudo chown ubuntu:ubuntu /hello 
    =======================
   
   changeing permission on a file 
   sudo chmod u=rw,g=rw,o=rw hello.txt
    ========================

    to change permission on a folder
    sudo chmod u=rwx,g=rwx,o=rwx hello2025/

    +++++++++++++++++++++++
    ===TO FIND VERSION NUMBER===
    cat /etc/issue = Ubuntu 24.04.1 LTS \n \l
    ==============================================
    ===================================
    =====================
    sudo ls -ld /home/ubuntu = to check if a folder exist
    =============================
    Understanding 755 Permissions:
    The 755 permission setting is broken down as follows:

    Owner (User): Read, write, and execute permissions (7).
    Group: Read and execute permissions (5).
    Others: Read and execute permissions (5).
    Detailed Breakdown:
    Owner (User): 7 (Read r, Write w, Execute x)
    The owner of the directory can read, write, and execute (access) the directory.
    Group: 5 (Read r, Execute x)
    Members of the group can read and execute (access) the directory, but cannot write to it.
    Others: 5 (Read r, Execute x)
    All other users can read and execute (access) the directory, but cannot write to it. -->
    =======================

    //after becoming an admin still was unable to get into ubuntu folder + copilot helped me out

    sudo chmod 755 /home/ubuntu
    cd /home/ubuntu
    ls = working fine at this point = oooookkkkk
    =============
    sudo chmod +x my-new.txt = make file executable
    sudo chmod -w my-new.txt = remove write permission

    ===============================
    +++++++++++++++++++++++++++++++++++++++++++++   
    ================================
    printenv info about log in session
    ///USE VARIABLE///
    echo hello my name is $SSH_CLIENT
    hello my name is 192.168.64.1 64133 22
    ==================
    USER=GOODGUY 
    echo hello my name is $USER
    hello my name is GOODGUY
    ============================================
    ||||||||||||||||||||||||||||||||||||||||||||
    ls -lash /bin/ = to show all the programs in bin directory
    ||||||||||||||||||||||||||||||||||||||||||||
    ============================================
    +++++++++++++++++++++++++++++++++++++++++++++
    +++++++++++++++++++++++++++++++++++
    ===============Permissions shortcuts============
    <!-- sudo chmod 777 file.txt
                r=4,w=2,x=1 -->

    sudo chmod 777 file.txt = -rwxrwxrwx
    sudo chmod 700 file.txt = -rwx------
    chmod 600 file.txt = -rw-------
    sudo chmod 640 file.txt = -rw-r-----
    sudo chmod 664 michael.txt = -rw-rw-r--
    =====================================
    touch mjw-new-program = -rw-rw-r--
    <!-- sudo chmod +x mjw-new-program = -rwxrwxr-x -->
    sudo chmod -x mjw-new-program = -rw-rw-r-- 1 ubuntu ubuntu
    <!-- sudo chmod +w mjw-new-program = -rw-rw-r-- -->
    ==========================================
    cat /etc/passwd
    ++++++++++++++++++++++++++++++++++++++
    ========================================
    =============Environments=============
    <!-- printenv --> = //$//
    echo $USER = ubuntu
    echo $HOME = /home/ubuntu
    <!-- echo Hello the user im currently logged in as is $USER =
    Hello the user im currently logged in as is ubuntu -->
    echo Hello this user lives at $HOME =
    Hello this user lives at /home/ubuntu
    //$USER = bash is doing the work with the command is run not echo//
    <!-- USER=Michael  -->
    echo Hello the user im currently logged in as is $USER = Hello the user im currently logged in as is
    Michael
    USER=Ubuntu
    echo Hello the user im currently logged in as is $USER
    Hello the user im currently logged in as is Ubuntu
    echo $GREETING $USER , how are you?
    Ubuntu , how are you?
    GREETING='Hello'
    echo $GREETING $USER , how are you?
    Hello Ubuntu , how are you?
    GREETING='Greetings'
    echo $GREETING $USER , how are you?
    Greetings Ubuntu , how are you?
    ========================================


    +++++++++++++++++++++++++++++++++++++++++++++
    ||||||||||||||||||||||||||||||||||||||||||||||||||
    ========================================
    ===============Environment Variables=============
    <!-- ////// MAKING PERMANENT VARIABLES /////// -->
    sudo vi /etc/environment
    Michael="WOW You will make allot of cash to help yourself and others. Amen."
    echo $Michael = BLANK FOR NOW
    ===================
    exit = logout Ubuntu out of current session in shell
    <!-- logout
        girlmeetguy@Michaels-MacBook-Air-2 ~ % -->
    =====open Shell again ===log in as Ubuntu======
    echo $Michael
    WOW You will make allot of cash to help yourself and others. Amen. = WORKS
    <!-- //VARIABLE CREATED AND SAVED////// -->
    su GirlMeetGuy
    echo $Michael
    WOW You will make allot of cash to help yourself and others. Amen. = works on another profile as well because the environment is
    shared by
    all users.
    ===============================
    |||||||||||||||||||||||||||||||||||||||||||||||
    ========================================




    +++++++++++++++++++++++++++++++++++++++++++
    +++++++++++++++SYSTEM UPGRADE+++++++++++++++++++
    <!-- Update Package List: = sudo apt update
List Upgradable Packages: = apt list --upgradable
Upgrade Packages: = sudo apt upgrade
Full Upgrade: = sudo apt full-upgrade
Clean Up: = sudo apt autoremove = sudo apt clean
Install ubuntu-advantage-tools: = sudo apt install ubuntu-advantage-tools
Attach to Ubuntu Advantage: sudo ua attach <your-token>
    Enable ESM for Applications: sudo ua enable esm-apps
    By following these steps, you can upgrade your system and enable Expanded Security Maintenance for applications -->
    ++++++++++++++++++++++++++++++++++++++++++++++++
    ++++++++++++++++++++++++++++++++++++++++++++++
    ========Variables===============
    export = export to general environment
    +++++++++++++++++++++++++++++++++++++++++++
    export Test_Linux="BLANK FOR NOW"
    echo $Test_Linux = BLANK FOR NOW
    su value
    echo $Test_Linux = wow this is so cool learing cool stuff' = //from last inputed value
    ===============================
    ================================
    |||||||||||||||||||||||||||||||||||||||||||
    =========BASH RC + BASH RC=============
    ========================================
    ===============.bashrc============= = .bashrc =   
    whoami is where u can change prompts ,setup colors, 
    input scrips to use +
    and variables just for your user + ect
    ========================================
    +++++++++++++++++++++++++++++++++++++++++++
    //////SETTTINGS FOR YOUR USER//////
    +++++++++++++++++++++++++++++++++++++++++++
    ubuntu
    vi ~/.bashrc
    ==================================
    export LINK="+GOD is Great"
    ///////////// 
    = added in .bashrc = save and quit
    ///////////////
    echo $LINK = BLANK FOR NOW
    ++++++++++++++++++++++++++++++++++++
    ==================================
    source = rerun script = rerun without exit
    source ~/.bashrc = rerun script
    =======
    echo $Link
    = +GOD is Great
    =========================
    =================================
    ++++++++++++++++++++++++++++
    ===============.bash_profile=============   
    ============BASH PROFILE================
    .bash_profile //runs once a day or once 
    when u open the shell interactively//
    ========================================
    vi .bash_profile
    ==================================
        if [ -f ~/.bashrc ]; then
        source ~/.bashrc
        fi
        save and quit vi;
    ==================================
    //this will ensure .bashrc runs everytime 
    in every session /// -->
    ==================================
    //EVERY USER has their own .bashrc
    ==================================
    +++++++++++++++++++++++++++++++++++++++++++
    la -lash = 4.0K -rw-r--r-- 1 ubuntu ubuntu 3.9K Dec 14 17:00 .bashrc
    ===================================================
    sudo vi /etc/bashrc = BASH RC FOR EVERYBODY
    ////////////////////////////////////////////////
    =========================================
    ++++++++++++++++++++++++++++++++++++++++
    =================Processes================
    ps aux = ALL RUNNING PROCESSES ON THE COMPUTER
    ===============================================
    ps = will show you only what the user is running
    ===============
    ps 
    = PID TTY TIME CMD
    24209 pts/0 00:00:00 bash
    24277 pts/0 00:00:00 ps 
    ===================================
    =====Commands====
    /////SLEEP PROGRAM/////
    sleep = wait for a certin time then return
    sleep 1 = wait =ONE SEC= then return
    sleep 5 = wait =FIVE SEC= then return
    =============================
    & = run in the background
    ===============================
    sleep 17 & = run in the background
    ===============================
    =====PID = Process ID======
    =========================
    sleep 17 & 
    ====
    = PID TTY TIME CMD
    24209 pts/0 00:00:00 bash
    24287 pts/0 00:00:00 sleep
    24288 pts/0 00:00:00 ps
    =====================================
    ps 
    = PID TTY TIME CMD
    24209 pts/0 00:00:00 bash
    24289 pts/0 00:00:00 ps
    [1]+ Done sleep 17
    ==========================
    sleep 100 & 
    = [1] 24290
    ps = PID TTY TIME CMD
    24209 pts/0 00:00:00 bash
    24290 pts/0 00:00:00 sleep
    24291 pts/0 00:00:00 ps
    ==========================
    kill -SIGKILL 24290
    ps 
    = PID TTY TIME CMD
    24209 pts/0 00:00:00 bash
    24295 pts/0 00:00:00 ps
    [1]+ Killed sleep 100
    =============================
    aux = what everyone is running
    ps aux
    ps aux | less = piped into less = nice scool table
    =======================================
    =====SEARCH ======GREP TO FIND A PROGRAM====== 
    ps aux | grep "ps" = to find just what you are 
    looking for
    ==================================== ===

    ++++++++++++++++++++++++++++++++++++++++++++
    ======BACKGROUND & FOREGROUND============
    ======BACKGROUND & FOREGROUND============
    ======BACKGROUND & FOREGROUND============
    ======BACKGROUND & FOREGROUND============
    sleep 1000 = started sleep 1000 SECONDS PROGRAM
    ^Z = [1]+ Stopped
    jobs = [1]+ Stopped
    bg 1 = [1]+ sleep 1000 &
    jobs = [1]+ Running sleep 1000 &
    =================================
    ls // ok system running fine
    ===============================
    sleep 1000
    ====
     ^Z = TO STOP RUNNING PROGRAM
     ++++++++++++++++++++++++++++++++++++++++++++
    ===STOP ===^C = to kills running program ===STOP ===
    ===STOP ===^C = to kills running program ===STOP ===
    ++++++++++++++++++++++++++++++++++++++++++++
    =================================
    ^Z = TO STOP RUNNING PROGRAM
    [1]+ Stopped sleep 1000
    ============
    ======================================
    jobs 
    = [1]+ Stopped sleep 1000
    ++++++++++++++++++++++++++++++++++++++++++++
    ////REACTIVATE PROGRAM////
    bg 1
    = [1]+ sleep 1000 & 
    ///sleep running the the background.
    ======================================
    jobs 
    = [1]+ Running sleep 1000 &
    ===================================
    fg 1 = bring program back to the foreground
    ===================================
    bg 1 = bring program back to the background
    +++++++++++++++++++++++++++++++++++++++++++++++
    ================================================
    +++++++++++++++++++++++++++++++++++++++++++++++
    jobs -l = to show the job number
    ========================================
    jobs -l = [1]+ 24313 Running sleep 1000 &
    kill -9 24313
    jobs 
    = [1]+ Killed sleep 1000
    ========================================
    ///TO KILL MULTIPLE PROGRAMS///
    kill -9 00000 00000 00000 00000
    ========================================
    =====================================
    =====================================
    =====================================
    sleep 1000 > sleep1000.txt & 
    = 
    send output to a file instead of displaying 
    it on the screen. since the screen might be 
    interactive.
    =====================================
    jobs 
    = [1]+ Running sleep 1000 > sleep1000.txt &
    ===========================================
    +++++++++++++++++++++++++++++++++++++++++++++++
    ||||||||||||||||||||||||||||||||||||||||||||||||||
    ================================================
    |||||||||||||||||||||||||||||||||||||||||||||||||||
    =======Exit Codes & Process Operators & 
    sub Commands ==============================
    ===================================
    //when program finishes it returns and exit 
    code on how the process finised//
    =================================
    date = current date
    date = Sat Dec 14 18:30:43 EST 2024
    ========================
    0 = SUCCESSFUL
    1 = "there was an error"
    2 = bash internal error not program
    anything that returns with 0 was successful
    126 = no permission or not executable file
    127 = command not found
    128 = bad exit command by user e.g non-int code
    130 = ended with ^C
    137 = program ended with -SIGKILL
    255 = OUT OF BOUNDS CODE LARGER THAN 255
    =========================
    ///////EXIT CODES////////
    ///////EXIT CODES////////
    ///////EXIT CODES////////
    ///////EXIT CODES////////
    ///////EXIT CODES////////
    echo $? 
    = 0 = successful
    |||||||||||||||||||||||||||||
    ///////EXIT CODES////////
    ///////EXIT CODES////////
    ///////EXIT CODES////////
    ////////////////////////////////
    yes 
    = yes program starts running forever
    ==========
    ^C 
    = killed the current running process
    ============
    echo $? = 148 = for yes = not zero = unsuccessful
    ====================
    +++++++++++++++++++
    ======OPERATORS===========
    >> 
    = append into
    ||||||||||||||||||||  
    $$ 
    = ALL MUST BE TRUE
    |||||||||||||||||||||||||
    ==========================
    && 
    = RUN ONLY IF THE PROGRAM THAT JUST FINISHED WAS SUCCESSFUL
    everything has to be true for all programs to run 
    successfully====== 
    ======================================

    || 
    = RUN ONLY IF THE PROGRAM THAT JUST FINISHED WAS UNSUCCESSFUL
    ===============================

    touch status.txt && date >> status.txt && uptime >> status.txt
    ls -lash = status.txt exsist
    cat status.txt = Sat Dec 14 18:45:59 EST 2024
    18:45:59 up 1 day, 4:53, 4 users, load average: 0.00, 0.00, 0.00
    ==========================
    uptime = 18:47:40 up 1 day, 4:54, 4 users, load average: 0.02, 0.01, 0.00
    ====================================
    false = false program = returns 0
    ====================
    false
    =======
    echo $? 
    = 1 = unsuccessful
    ===========================
    ///////cat $? = cat: 0: No such file or directory/////
    ++++++++++++++++++++++++++++++++++++
    true = true program = returns 1
    true
    echo $? = 0
    ====================================
    false && echo hi = nothing = only return 1 in bg
    true && echo hi = hi = return 0 in bg
    ++++++++++++++++++++++++++++++++++
    false || echo hey your suppose to be false = hey your suppose to be false
    true || echo hey i wanted to say something = echo = BLANK
    ==============================
    //////true ; false ;/////////////RUN NO MATTER WHAT/////
    //////true ; false ;/////////////RUN NO MATTER WHAT/////
    //////true ; false ;/////////////RUN NO MATTER WHAT/////
    true ; false ; echo hey i wanted to run this dont matter what 
    = hey i wanted to run this dont matter what
    =====================================
    ||||||||||||||||||||||||||||||||||||||||||||||||||||
    ||||||||||||||||||||||||||||||||||||||||||||||||||||
    ===========Subcommands=========
    ||||||||||||||||||||||||||||||||||||||||
    $() = will run return output info to higher running 
    process that called it
    echo hey im on this computer logged in as user
    $(whoami) and this user is wonderful 
    = 
    hey im on this computer logged in as user ubuntu 
    and this user is wonderful -->
    echo the current date and time and year
    is $(date) = the current date and time
    and year is Sat Dec 14
    19:05:29
    EST 2024
    ===================================
    |||||||+%x = just date +%x = INFO IN MAN|||||
    ===================================
    echo $(date +%x) - $(uptime) >> mjwlog.txt
    ===================
    cat mjwlog.txt 
    = 12/14/24 - 19:09:05 up 1 day, 5:16, 4 users, load average: 0.00, 0.00, 0.00
    =============================
    ||||||||||||||||||||||||||||||||||||||||||
    echo hi $(cat < mjwlog.txt) user
    echo $(whoami) $(whoami) $(whoami)
    = ubuntu ubuntu ubuntu
    ||||||||||||||||||||||||||||||||||||||||||
    ===========================================
    echo hi `whoami` how are you today? 
    = hi ubuntu how are you today? 
    ===========
    +++++++++++++++++++++++++++++++++++++++++++++
    $() 
    = much better and you can nest them as well
    ===================================
    ===================================
    ===================================
    |||||||||||||||||||||||||||||||||||||||||||||||||
    =================================================
    +++++++++++++++++++++++++++++++++
    //////=========SSH & Secondary Machine==========////
    SSH = Secure Shell and allows you to connect
    from one computer to another computer. also allows 
    you to remotely execute commands on a different
    computer.
    ===========================================
    +++++++++++++++++++++++++++++++++++++++
    =======starting a second VM using multipass=========
    +++++++++++++++++++++++++++++++++++++++
      ===========================================
    +++++++++++++++++++++++++++++++++++++++
    =======starting a second VM using multipass=========
    +++++++++++++++++++++++++++++++++++++++
    ======OPEN A NEW SHELL TO RUN COMMANDS========
     ======OPEN A NEW SHELL TO RUN COMMANDS========
    multipass launch --name secondary 
    = Launched: secondary -->
    ==========
    multipass shell secondary
    //to enter the shell of the secondary VM//
    GirlMeetGuy@secondary:~$ 
    = ///Secondary Ubuntu VM//
    ////==============================////////
    ////==================================/////////
    /////==============================///////////
    //////==================================///////
    =========SSH & Secondary Machine==========
    ++++++CREATE A USER++++++
    ++++++CREATE A USER++++++
    ++++++CREATE A USER++++++
    sudo useradd -s /bin/bash -m -g ubuntu GirlMeetGuy
    ===========================================
    /bin/bash = default shell to use
    -s = default shell when creating a user
    -m = auto create the user a home folder
    -g - give user group so they have the same permissions
     as other members in the group.
    ===========================================
    /////CHECK IF USER WAS CREATED/////
    cat /etc/passwd 
    = GirlMeetGuy:x:1001:1000::/home/GirlMeetGuy:/bin/bash
    ===============
    /////SET PASSWORD FOR USER/////
    sudo passwd GirlMeetGuy
    = New password: = 200
    passwd: password updated successfully
    ================================
    whoami
    ubuntu
    su GirlMeetGuy
    Password: = 200
    GirlMeetGuy@secondary:/home/ubuntu$
    =================================
    cd .. 
    = GirlMeetGuy@secondary:/home$
    ========
    ls 
    = ubuntu GirlMeetGuy
    ======================
    SSH key = is like cryptographic key that basically 
    creates a private version and a public version of
    itself =
    the PRIVATE VERSION YOU NEVER REVEAL TO ANYONE 
    and 
    the public version you share with others.
    ==========
    +++++++++++++++++++++++++++++++++++++++++++++
    +++++++++++++++++++++++++++++++++++++++++++++
    ++Public and private version of the key allows 
    services to do a handshake with eachother but 
    they never have to reveal their private keys 
    BUT THEY CAN VERIFY THAT THE OTHER PARTY HAS THE 
    PRIVATE KEY THAT + THEY SAY THEY HAVE.
    +++++++++++++++++++++++++++++++++++++++++++++
    +++++++++++++++++++++++++++++++++++++++++++++
    ===================================
    =========Generating an SSH KEY==============
    =========Generating an SSH KEY==============
    =========Generating an SSH KEY==============
    ++++++++++++++++++++++++++++++++++++++++++++++++
    ++++++++++++++++++++++++++++++++++++++++++++++++
    ////will be connecting to the secondary computer////
    ///////from the primary computer/////
    /////generating an SSH KEY/////on primary computer///
    ||||||||||||||||||||||||||||||||||||||||||||||
    ////From the primary computer////
    ssh-keygen -t rsa 
    = Generating public/private rsa key pair. 
    =============================================
    |||||Private key is stored in id_rsa and ||||||||||
    we will keep that secret. on the primary computer//
    |||||||||||||||||||||||||||||||||||||||||||||||
    Enter file in which to save the key 
    (/home/ubuntu/.ssh/id_rsa): 
    = Enter or change directory
    = leaving blank for now
    ===================================
    Enter passphrase (empty for no passphrase): 
    = enter password to use key everytime key is 
    accessed = leaving password blank for now
    Enter same passphrase again: = BLANK FOR NOW
    |||||||||||||||||||||||||||||||||||||||||||||||
    The key fingerprint is:
    SHA256:63QObTraBKmhvBrmOBNemdab3VomBoCE046ZvMhFp8E ubuntu@primary
    The key's randomart image is:
    +---[RSA 3072]----+
    |.o. |
    |+ oE . |
    |.B..+ |
    |+..o. . |
    |o o =.o S |
    |o+ * +.. o |
    |oo= . +o*o+ |
    |*o . o.*=B |
    |o=. .o=.. |
    +----[SHA256]-----+

    ===================================
   +++++++++++++++++++++++++++++++++++++++++++++
    ============================================
    cd .ssh
    =====
    ls 
    = authorized_keys id_rsa id_rsa.pub
    =============
    id_rsa = private key = secret
    id_rsa.pub = public key
    ==================================
    ||||||||||||||||||||||||||||||||||||||||
    +++++++++++++++++++++++++++++++++++++++++++++
    +++++++++++++++++++++++++++++++++++++++++++++
    +++++++++++++++++++++++++++++++++++++++++++++
    ||||||||||||||||||||||||||||||||||||||||
    \\\\\\ON SECONDARY COMPUTER\\\\\\\\
    \\\\\\ ON SECONDARY COMPUTER\\\\\\\\
    ==GirlMeetGuy@secondary:/home$ ==FROM HOME==
    cd GirlMeetGuy 
    GirlMeetGuy@secondary:~$ 
    cd GirlMeetGuy = change to GirlMeetGuy home directry
    ===============
    mkdir ~/.ssh
    ======
    ls -lash 
    = 4.0K drwxr-xr-x 2 GirlMeetGuy ubuntu 4.0K 
    Dec 14 20:24 .ssh
    ===========================
    cd .ssh
    ================
    ///from within new .ssh folder that was created///
    ls -lash 
    = total 8.0K
    4.0K drwxr-xr-x 2 GirlMeetGuy ubuntu 4.0K Dec 14 20:24 .
    4.0K drwxr-x--- 3 GirlMeetGuy ubuntu 4.0K Dec 14 20:24 ..
    =======================================
    ====As GirlMeetGuy from /.ssh folder===
    ////enter in vi editor to enter key info////
    ======READY TO ADD KEY INFO INTO VI=====
    ======READY TO ADD KEY INFO INTO VI=====
    =================================
    vi authorized_keys 
    = "authorized_keys" [New] 0,0-1 All
    ======READY TO ADD KEY INFO INTO VI=====
    ======READY TO ADD KEY INFO INTO VI=====
    +++switched to primary shell to get pub key info++++
    +++switched to primary shell to get pub key info++++
    +++switched to primary shell to get pub key info++++
    +++switched to primary shell to get pub key info++++
    ===switched to primary shell to get pub key info===
    ================================
    from Ubuntu /.ssh folder
    =======
    cat id_rsa.pub 
    =
  ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCdf20N/Kw5qYimx2oCjJ6m7zZV8zV4YYcu7S0ssVAiC7lUp3AlG+R+ux8YC88RkfGT0wuTZFcjEyjA1aVpXdSrj0ROGKs9Du76JD+zZZ6MQgU4JxwxqJNkW9gff6XquFfQaaC7ZEfg8ErEhw/VHKFwDft6zj6PfefRKuwqWKrPEirSzojWkq7QorKd0FsA4lLOxhwKU1LUAie8H+RHttwiGqI4Mox0rbAWG46g5Vvnboc3z9HmJREKK5txUV8eVA9Q9yoL48e3ZneJd/rZs1bIwNWGGekWALa6f19kWu2dJbmlCk+nyjBUenbTxnuqsR3lkvKoOfq/fndPr835Fp2A0HTDSd1qDbhMKIA735dcQKs0roNGmm1IdPAQPLHdO2d0TdNk8385rAo6dNDvgGn5Cx2KI35eomXnmThaxTKZVFFFhJtFwoktm+kHxLQdThVR5s/maSwPRXhAGuFvb3pFCyfYHeeK3PdB/oVSN9/9GZG55eZoPdWrEDIbG3wNpxM= ubuntu@primary
    ===========================================
    |||||||||||||||||||||||||||||||||||||||||||||||
    ++++++++++++++++++++++++++++++++++++++++++++++++
    ===++++++++PASTE THE PUBLIC KEY INTO VI ON SECONDARY COMPUTER===++++++++++++++++++++++++++++++++++
    ===++++++++PASTE THE PUBLIC KEY INTO VI ON SECONDARY COMPUTER===++++++++++++++++++++++++++++++++++
    |||||||||||||||||||||||||||||||||||||||||||
    ++++++++++++++++++++++++++++++++++++++++++++
    ==Here is a public SSK KEY that if someone can verify that this is their key that they have with they own private key allow them to log into this computer so its basically like a user name and password for a user.
    ==================================
    +++PASTE the public ssh KEY info INTO VI on secondary computer then :wq
    =======================================
    ls -lash 
    = 4.0K -rw-r--r-- 1 GirlMeetGuy ubuntu 568 Dec 14 20:44 authorized_keys
    ==================================
    ///////CHANGE PERMISSIONS ON THE SSH FOLDER///////
    ///To make sure that the folder is secure and only the user can access it///
    ==================================
    GirlMeetGuy@secondary:~/.ssh$ chmod 700 ~/.ssh
    ////unable to change no 
    sudo permission///
    ==================================
    ++++++++++++++++++
    to Fix 
     +++++++TO GIVE USER SUPER USER PERMISSIONS+++++++
      +++++++TO GIVE USER SUPER USER PERMISSIONS+++++++
       +++++++TO GIVE USER SUPER USER PERMISSIONS+++++++
     +++++++TO GIVE USER SUPER USER PERMISSIONS+++++++
    ========///swith to ubuntu///=========
    GirlMeetGuy@secondary:/$ sudo usermod -aG sudo GirlMeetGuy
     +++++++TO GIVE USER SUPER USER PERMISSIONS+++++++
      +++++++TO GIVE USER SUPER USER PERMISSIONS+++++++
       +++++++TO GIVE USER SUPER USER PERMISSIONS+++++++

    ================///make GirlMeetGuy a sudo member///
    =
    To run a command as administrator (user "root"), use "sudo <command>".
    See "man sudo_root" for details.
    ++++++++++++++++++++++++++++++++++++++++++
    ==================================
    ///////CHANGE PERMISSIONS ON THE SSH FOLDER///////
    ///To make sure that the folder is secure and only the user can access it///
    ==================================
    GirlMeetGuy@secondary:~/.ssh$ chmod 700 ~/.ssh
    ==================================
    cd .. 
    ls -lash 
    = 4.0K drwx------ 2 GirlMeetGuy ubuntu 4.0K Dec 14 20:44 .ssh
    ===================================
    GirlMeetGuy@secondary:~/.ssh$ ls -lash = 4.0K -rw-r--r-- 1 GirlMeetGuy ubuntu 568 Dec 14 20:44 authorized_keys
    =================================
    <!-- cd .. -->
    GirlMeetGuy@secondary:~$ chmod 600 ~/.ssh/authorized_keys
    ===========================
    <!-- cd .ssh -->
    ls -lash = 4.0K -rw------- 1 GirlMeetGuy ubuntu 568 Dec 14 20:44 authorized_keys
    ========================================
    +++++++++++++++++++++++++
    ==we now need to get an ip address from the secondary computer so the primary computer can connect to it
    ++++++++++++++++++
    ================
    groups = list the sudo privileges for the current user. //USER
    sudo -l = list the sudo privileges for the current user. //USER
    ======================================
    <!-- ==seems GirlMeetGuy didnt have sudo right to install the net-tools which is needed to run ifconfig program.
    ==will have to make GirlMeetGuy a sudo member using Ubuntu on secondary computer. -->
    ==================================================
    GirlMeetGuy@secondary:~$ cat /etc/passwd =
    ubuntu:x:1000:1000:Ubuntu:/home/ubuntu:/bin/bash
    GirlMeetGuy:x:1001:1000::/home/GirlMeetGuy:/bin/bash
    =============================
    GirlMeetGuy@secondary:~$ sudo usermod -aG sudo GirlMeetGuy
    su GirlMeetGuy = Password:
    To run a command as administrator (user "root"), use "sudo <command>".
        See "man sudo_root" for details.
        ==========================================
  GirlMeetGuy@secondary:~/.ssh$ chmod 700 ~/.ssh
  = OK
  ==============
  ls 
  = 4.0K drwx------  2 ubuntu ubuntu 4.0K 
  Jan 13 16:30 .ssh
  =============================
  /////PERMISSIONS ON THE SSH FOLDER CHANGED OK///////
  =========================
  +++++++++++++++++++++++++++++
  |||||||||||||||||||||||
   0 -rw-r--r-- 1 GirlMeetGuy ubuntu    0 Jan 13 17:33  
   .sudo_as_admin_successful
   ||||||||||||||||||||||
   ++++++++++++++++++++++++++++++++++++++++
  ==NOW TO CHANGE PERMISSIONS ON THE AUTHORIZED KEYS FILE==////////
  ========================
    GirlMeetGuy@secondary:~/.ssh$ chmod 600 ~/.ssh/authorized_keys
    = OK
    ls -lash
    =
    4.0K -rw------- 1 GirlMeetGuy ubuntu  568 Jan 13 17:18 authorized_keys
    =================================
    ////permissions on the authorized keys file changed OK////===================
    =========================================
+++++++++++++++++++++++++++++++++++++++++++++++++++
+++++++++++++++++++++++++++++++++++++++++++++++++++
+++++++++++++++++++++++++++++++++++++++++++++++++++
+++++++++++++++++++++++++++++++++++++++++++++++++++
////////NOW WE NEED TO GET THE IP ADDRESS OF THE SECONDARY COMPUTER////////
+++++++++++++++++++++++++++++++++++++++++++++++++++
        GirlMeetGuy@secondary:~$ ifconfig = Command 'ifconfig' not found, but can be installed with:
        sudo apt install net-tools
        GirlMeetGuy@secondary:~$
+++++++++++++++++++++++++++++++++++++++++++++++++
        ===========================
        ++++++++++++++++++++++++++++++++
        GirlMeetGuy@secondary:~$ sudo apt update 
        =
            [sudo] password for GirlMeetGuy:
            Hit:1 http://ports.ubuntu.com/ubuntu-ports noble InRelease
            Get:2 http://ports.ubuntu.com/ubuntu-ports noble-updates InRelease [126 kB]
            Hit:3 http://ports.ubuntu.com/ubuntu-ports noble-backports InRelease
            Get:4 http://ports.ubuntu.com/ubuntu-ports noble-security InRelease [126 kB]
            Get:5 http://ports.ubuntu.com/ubuntu-ports noble-updates/main arm64 Packages [715 kB]
            Get:6 http://ports.ubuntu.com/ubuntu-ports noble-updates/universe arm64 Packages [905 kB]
            Fetched 1872 kB in 2s (1113 kB/s)
            Reading package lists... Done
            Building dependency tree... Done
            Reading state information... Done
            37 packages can be upgraded. Run 'apt list --upgradable' to see them.
            ===================================
            +++++++++++++++++++++++++
            |||||||||||||||||||||||||||||||||
            ////UPGRADE THE APT PACKAGE/////
            sudo apt upgrade
            = OK
            ===========================
            //////////INSTALLING NET-TOOLS////////
            ================
GirlMeetGuy@secondary:~$ sudo apt install net-tools
=
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
The following NEW packages will be installed:
  net-tools
0 upgraded, 1 newly installed, 0 to remove and 4 not upgraded.
Need to get 207 kB of archives.
After this operation, 1229 kB of additional disk space will be used.
Get:1 http://ports.ubuntu.com/ubuntu-ports noble/main arm64 net-tools arm64 2.10-0.1ubuntu4 [207 kB]
Fetched 207 kB in 1s (342 kB/s)
Selecting previously unselected package net-tools.
(Reading database ... 77400 files and directories currently installed.)
Preparing to unpack .../net-tools_2.10-0.1ubuntu4_arm64.deb ...
Unpacking net-tools (2.10-0.1ubuntu4) ...
Setting up net-tools (2.10-0.1ubuntu4) ...
Processing triggers for man-db (2.12.0-4build2) ...
Scanning processes...                                                                                  
Scanning linux images...                                                                               

Running kernel seems to be up-to-date.

No services need to be restarted.

No containers need to be restarted.

No user sessions are running outdated binaries.

No VM guests are running outdated hypervisor (qemu) binaries on this host.
++++++++++++++++++++++++++++++++++++++++++++
+++++++++++++++++++++++++++++++++++++++++++++++++
=============================================== -->
        GirlMeetGuy@secondary:~$ ifconfig  
        ++++++++++++++++
        =======================
 enp0s1: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 192.168.64.7  netmask 255.255.255.0  broadcast 192.168.64.255
        inet6 fdd3:6e1a:4659:7723:5054:ff:fed9:891f  prefixlen 64  scopeid 0x0<global>
        inet6 fe80::5054:ff:fed9:891f  prefixlen 64  scopeid 0x20<link>
        ether 52:54:00:d9:89:1f  txqueuelen 1000  (Ethernet)
        RX packets 28414  bytes 35769013 (35.7 MB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 5762  bytes 613603 (613.6 KB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
        inet 127.0.0.1  netmask 255.0.0.0
        inet6 ::1  prefixlen 128  scopeid 0x10<host>
        loop  txqueuelen 1000  (Local Loopback)
        RX packets 156  bytes 14258 (14.2 KB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 156  bytes 14258 (14.2 KB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

        +++++++++++++++++++++++++++++++++++++++++++
           ifconfig
                        inet 192.168.64.14 = secondary computer ip-address on current
                        network
                        ==========
                        netmask 255.255.255.0 = means 192.168.64 of the ip address is
                        loced in and shouldnt change.
                        ============
                        broadcast 192.168.64.255 = 192.168.64 locked in for this
                        computer on this network.
                        ===================
                        //////////////////////////
                        +++++++++++++++++++++++++++
                          flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
        inet 127.0.0.1 = this is how the COMPUTER refers to itself
        |||||||||||||||||||||||||||||||||||||||||||||||
        |||||||||||||||||||||||||||||||||||||||||||||||
        ================================================
                        ============================
                        <!-- # Switch to a user with sudo privileges
                            su GirlMeetGuy

                            # Update the package list
                            sudo apt update

                            # Install net-tools
                            sudo apt install net-tools

                            # Run ifconfig
                            ifconfig -->
                        =================================
                     ||||||||||||||||||||||||||||||||||||
                     ////NOW THAT WE HAVE THE IP ADDRESS OF THE SECONDARY COMPUTER WE CAN CONNECT TO IT FROM THE PRIMARY COMPUTER////  ======================
                        +++++++++++++++++++++++++++++++++++++++++++
                        +++++++++++++++++++++++++++
                        ====CONNECTING TO SECONDARY COMPUTER=====
                        ||||||||||||||||||||||||||||
                        |||||||||||||||||||||||||||
                        ===USING SSH AGENT=========
                        ++++Linking two Machines with SSH++++
                        <!-- ==FROM primary computer  -->
                        ubuntu@primary:~/.ssh$ cd ~
                        ubuntu@primary:~$ 
                        ssh GirlMeetGuy@192.168.64.7
                        ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
                        = Are you sure you want to
                        continue connecting
                        (yes/no/[fingerprint])? yes

                        =================
                        Warning: Permanently added '192.168.64.14' (ED25519) to the list
                        of known hosts.
                        Welcome to Ubuntu 24.04.1 LTS (GNU/Linux 6.8.0-49-generic
                        aarch64)

                        * Documentation: https://help.ubuntu.com
                        * Management: https://landscape.canonical.com
                        * Support: https://ubuntu.com/pro

                        System information as of Sat Dec 14 21:45:19 EST 2024

                        System load: 0.0
                        Usage of /: 49.4% of 3.80GB
                        Memory usage: 20%
                        Swap usage: 0%
                        Processes: 101
                        Users logged in: 1
                        IPv4 address for enp0s1: 192.168.64.14
                        IPv6 address for enp0s1: fd64:958e:edfe:5eeb:5054:ff:fe6a:9c28


                        Expanded Security Maintenance for Applications is not enabled.

                        42 updates can be applied immediately.
                        25 of these updates are standard security updates.
                        To see these additional updates run: apt list --upgradable

                        Enable ESM Apps to receive additional future security updates.
                        See https://ubuntu.com/esm or run: sudo pro status



                        The programs included with the Ubuntu system are free software;
                        the exact distribution terms for each program are described in
                        the
                        individual files in /usr/share/doc/*/copyright.

                        Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent
                        permitted by
                        applicable law.
                        ===============================
                        +++++++++++++++++++++
                        ===========================
                        |||||||||||||||||||||||||||||||
                        //Login was successful////////
                        |||||||||||||||||||||||||||||||
                        GirlMeetGuy@secondary:~$ exit
                        = logout
                        Connection to 192.168.64.14 closed.
                        =========================
                        ubuntu@primary:~$ ssh GirlMeetGuy@192.168.64.14 
                        = OK WAS ABLE TO LOG
                        IN AGAIN 
                        = LAST LOGING INFO AFTER LOGGIN IN =
                        Last login: Sat Dec 14 21:45:19 2024 from
                        192.168.64.4
                        ========================
                        ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
                        /////browsing the secondary computer from the primary computer/////================
                        +++++++++++++++++++++++++++++++++++++++++++
                        GirlMeetGuy@secondary:~$ ls -lash 
                        = 4.0K drwx------ 2 GirlMeetGuy ubuntu 4.0K Jan 13 17:18  .ssh
                        ================
                        cd .ssh
                        ls -lash 
                        = 4.0K -rw------- 1 GirlMeetGuy ubuntu  568 Jan 13 17:18 authorized_keys
                        ===========================
                        GirlMeetGuy@secondary:~/.ssh$ vi authorized_keys = ok the key is still there and the permissions are still good
                        +++++++++++++++++++++++++++++++++++++++++++
                        :q = to exit vi
                        ===========================
                        ===================================
                        |||||||||||||||||||||||||||||||
                        |||||||||||||||||||||||||||||||
                        |||||||||||||||||||||||||||||||
                        |||||||||||||||||||||||||||||||
                        ====SFTP========Secure File Transfer Protocol====
                        |||||||||||||||||||||||||||||||
                        ubuntu@primary:~$ sftp GirlMeetGuy@192.168.64.7 
                        = Connected to 192.168.64.7.
                        sftp> 
                        ++++++++++++++++++++++++++++ 
                        ||||||COMMANDS FOR SFTP||||||
                        ||||||COMMANDS FOR SFTP||||||
                        ===========================
                        sftp> pwd = Remote working directory: /home/GirlMeetGuy
                        ==============================
                        ++++++++++++++++++++++++++++
                        sftp> lpwd = Local working directory: /home/ubuntu
                        ======
                        ++++++++++++++++++++++++++++
                        sftp> lls = local list of files on the primary users computer
                        +++++++++++++++++++++++++++++
                        ||||||||||||||||||||||||||||||||
                        ||||||||||||||||||||||||||||||||
                        =================================
                        ! = ALLOWS YOU TO RUN COMMANDS ON THE PRIMARY COMPUTER WHILE IN SFTP MODE |||||||||||||||||||||
                        =================================
                        sftp> put michael.txt
                        = Uploading michael.txt to /home/GirlMeetGuy/michael.txt
                        michael.txt                              100%  119   74.0KB/s   00:00 
                        ||||||||||||||||||||||||||||||||
                        ||||||||||||||||||||||||||||||||
                         +++++++CREATED A FILE ON THE PRIMARY COMPUTER TO PUT ON THE SECONDARY COMPUTER++++++ 
                         +++++++++++++++++++++++++++++++
                         ==============================
                         ! = RUN LOCAL COMMANDS WHILE IN SFTP MODE
                         ====================
                         ! = ALLOWS YOU TO RUN COMMANDS ON THE PRIMARY COMPUTER WHILE IN SFTP MODE+++++++++++++++++
                         ===============
                        sftp> !echo "Hello this is Michael how are you? happy 2025" >> file-to-put.txt 
                        ||||||||||||||||||||||||||||||||
                        ||||||||||||||||||||||||||||||||
                       
                        =================== 
                        sftp> !cat file-to-put.txt = Hello this is Michael how are you? happy 2025
                        ==============================================
                        |||||||||||||||||||||||||||||
                        |||||||||||||||||||||||||||||
                        ===PUT THE FILE ON SECONDARY COMPUTER AND ALSO RENAME IT AT THE SAME TIME TO GIVE IT A NEW NAME ON THE SECONDARY COMPUTER====
                        ===============================
                        sftp> put file-to-put.txt NEW-put-file.txt  
                        = Uploading file-to-put.txt to /home/GirlMeetGuy/NEW-put-file.txt
                        file-to-put.txt                                       100%   46    52.5KB/s   00:00 
                        =================================
                        |||||||||||||||||||||||||||||||||
                        ==============================
                        ===FROM SECONDARY COMPUTER=====
                        ===FROM SECONDARY COMPUTER=====
                        GirlMeetGuy@secondary:~$ ls -lash 
                        = NEW-put-file.txt  michael.txt
                        ================
                        cat NEW-put-file.txt 
                        =
                        Hello this is Michael how are you? happy 2025
                        |||||||||||||||||||||||||||||||||
                        |||||||||||||||||||||||||||||||||
                        =============================
                        /////////////////////////////////
                        ///////HELP FOR SFTP COMMANDS//////////=============
                        ================================
                        help = help with everything you can do  
                        ==============================
                        =================================
                        sftp> pwd = Remote working directory: /home/GirlMeetGuy
                        ================
                        L = Local 
                        =========================
                        sftp> lpwd = Local working directory: /home/ubuntu
                        sftp> cd ..
                        sftp> pwd = Remote working directory: /home
                        sftp> lcd ..
                        sftp> lpwd = Local working directory: /home
                        sftp> lcd ~
                        sftp> lpwd = Local working directory: /home/ubuntu
                        sftp> cd GirlMeetGuy
                        sftp> pwd = Remote working directory: /home/GirlMeetGuy
                        =================================================================
                        /////DOWNLOADING FILES FROM THE SECONDARY COMPUTER TO THE PRIMARY COMPUTER///////=========
                        ==============================
                        ===getting files from the secondary computer==== -->
                        ==============================
                        get lover1983GoOnlineDj.txt
                        = Fetching /home/GirlMeetGuy/lover1983GoOnlineDj.txt to lover1983GoOnlineDj.txt
                        lover1983GoOnlineDj.txt                               100%   79    39.9KB/s   00:00 
                        ============================
                        |||||||||||||||||||||||||||||||
                        /////////////////////////////////
                        |||||||||||||||||||||||||||||||
                        /////USE SSH TO VIEW CONTENTS OF FILES ON SECONDARY COMPUTER///////////////////////
                        ===============================
                        cat command to view the contents of a .txt file on a secondary VM in Linux
                        +++++++++++++++
                        ubuntu@primary:~$ ssh GirlMeetGuy@192.168.64.7 "cat /home/GirlMeetGuy/lover1983GoOnlineDj.txt"
                        |||||||||||||||||||||||||||||||
                        ===============================
                        ssh GirlMeetGuy@192.168.64.7 "echo /home/GirlMeetGuy/lover1983GoOnlineDj.txt"
                        ======USING ECHO JUST ECHO THE PATH TO THE FILE ON THE SECONDARY COMPUTER====
                        ===============================
                        ////USE CAT TO VIEW THE CONTENTS OF THE FILE ON THE SECONDARY COMPUTER////=================
                        |||||||||||||||||||||||||||||||
                        ||||||||||||||||||||||||||||||||
                        +++++++EXIT SFTP MODE+++++++
                        ============================
                        sftp> bye 
                        = to exit sftp 
                        =================================
                        ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
                        ++++++++++++++++++++++++++++++
                        ++++++++++++++++++++++++++++++
                        ========wet===&==curl========
                        ========wet===&==curl========
                        ========wet===&==curl========
                        ========wet===&==curl========
                        ========wet===&==curl========
                        ========wet===&==curl========
                         +are two ways of getting a remote file. 
                        =================================
                        ========wget===&==curl========
                        ========wget===&==curl========
                        ========wget===&==curl========
                        ========wget===&==curl========
                        ========wget===&==curl========
                        =================================
                        wget = downloading a file from the internet or it could also be
                        from a network.
                        ===========================
                        ||||||||||||||||||||||||||||
                        ==downloading a file =====
                        ||||||||||||||||||||||||||||
                        wget https://raw.githubusercontent.com/btholt/bash2048/master/bash2048.sh 
                        +++++++++++++
                        = to cl GAME FILE 
                        = --2024-12-15 07:11:24--
                        https://raw.githubusercontent.com/btholt/bash2048/master/bash2048.sh
                        Resolving raw.githubusercontent.com
                        (raw.githubusercontent.com)... 185.199.111.133, 185.199.110.133,
                        185.199.108.133,
                        ...
                        Connecting to raw.githubusercontent.com
                        (raw.githubusercontent.com)|185.199.111.133|:443... connected.
                        HTTP request sent, awaiting response... 200 OK
                        Length: 9514 (9.3K) [text/plain]
                        Saving to: ‘bash2048.sh’

                        bash2048.sh 100%[===================>] 9.29K --.-KB/s in 0.001s

                        2024-12-15 07:11:24 (10.5 MB/s) - ‘bash2048.sh’ saved
                        [9514/9514]
                        //////////////////////////////
                        ===game downloaded successfully===////////////
                        ||||||||||||||||||||||||||||||||
                        ||||||||||||||||||||||||||||||||
                        ===========================
                        ls -lash 
                        =  
                        12K -rw-rw-r--  1 ubuntu ubuntu 9.3K Jan 13 21:13 bash2048.sh  
                        ==========================
                        |||||||||||||||||||||||||||||||
                        ==NOTE TO RUN THE GAME WITHOUT MAKING IT AN EXCECUTABLE FILE===
                        ==bash bash2048.sh ============
                        ||||||||||||||||||||||||||||||||
                        ==========================
                        |||||||||||||||||||||||||||||||
                        the file is not excecutable we could just pipe in into bash e.g
                        = bash bash2048.sh = or we can change the permissions to add
                        excecutable to the file.
                        ==========================
                        +++++++++++++++++++++++++++++
                        |||||||||||||||||||||||||||||||
                        chmod +x bash2048.sh 
                        = ADD EXCECUTABLE OPTION TO FILE
                        ===========
                        ls -lash 
                        =  12K -rwxrwxr-x  1 ubuntu ubuntu 9.3K Jan 13 21:13 bash2048.sh
                        ====================================|||||||||||||||||||||||||||||
                        ====RUN/EXECUTE THE GAME====
                        ====EXCECUTE OR RUN A FILE LIKE THIS===||||||||||||||||||||||
                        =======================
                        bash bash2048.sh
                        . bash2048.sh = TO RUN FILE excecutable
                        ./bash2048.sh = TO RUN FILE excecutable
                        = TO RUN FILE  
                        ^C = save game info
                        =========================
                        ============================
                        |||||||||||||||||||||||||||||||
                        wget = is like copy or like cp = only thing is you cant pipe =
                        however Wget can do RECURSIVE DOWNLOADS and curl CANNOT DO
                        RECURSIVE DOWNLOAD. Wget can be used to download an entire
                        website because it can download all the SUB URLs as well .
                        info using Wget .
                        ==============================
                        wget --help 
                        = GNU Wget 1.21.4, a non-interactive network retriever.
                        Usage: wget [OPTION]... [URL]... 
                        ||||||||||||||||||||||||||||||||
                        ==============
                        |||||||||||||||||||||||||||||||
                        |||||||||||||||||||||||||||||||
                        curl = has standard in and standard out so it can pipe info or file into programs.
                        ||||||||||||||||||||||||||||||||
                        ||||||||||||||||||||||||||||||||
                        =========================
                        ||||||||||||||||||||||||||||||||
                        ||||||||||||||||||||||||||||||||
                        curl = has the ability to plug into the greater Unix, Linux
                        ecosystem.
                        ==========================
                        ======curl==========
                        curl https://raw.githubusercontent.com/btholt/bash2048/master/bash2048.sh 
                        =========++++++++++++++++++++
                        ////all contents of the file will be displayed on the terminal//// or standard out/////
                        ======since we dont want that we want to play the game , we will pipe the game into a file and give it a name ////////////
                        ==========================
                        |||||||||||||||||||||||||||||||
                        curl https://raw.githubusercontent.com/btholt/bash2048/master/bash2048.sh > game2048.sh      
                        =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
                        100  9514  100  9514    0     0  62632      0 --:--:-- --:--:-- --:--:-- 63006
                        =========================
                        |||||||||||||||||||||||||||||||
                        |||||||||||||||||||||||||||||||
                        |||||||||||||||||||||||||||||||
                        ls -lash 
                        =  12K -rw-rw-r--  1 ubuntu ubuntu 9.3K Jan 13 22:05 game2048.sh
                        ============================
                        cat game.sh 
                        = the contents of file. = #!/usr/bin/env bash
                        ============================
                        ++++++++++++++++++++++++
                        |||||||||||||||||||||||||||||||
                        |||||||||||||||||||||||||||||||
                        |||||||||||||||||||||||||||||||
                        |||||||||||||||||||||||||||||||
                        ====Starting a server or creating a server to test API endpoints using python3=======
                        |||||||||||||||||||||||||||||||
                        +++started a new primary shell
                        ========================
                        +++//FOR SERVER///+++++++++++
                        ==from second primary shell//
                        =====================
                        ///STARTING A SERVER///
                        +++++++++++++++++++++++++
                        |||||||||||||||||||||||||||||||
                        ubuntu@primary:~$ python3 -m http.server 8000 --bind 0.0.0.0 = Serving HTTP on 0.0.0.0 port 8000
                        (http://0.0.0.0:8000/) ...
                        ====================
                        //this is a running python3 static web server//////////
                        ==============
                        +++++++++++++++++++++++++
                        |||||||||||||||||||||||||||||||
                        +++++++++++++++++++++++++
                        |||||||||||||||||||||||||||||||
                        ==SWITCH BACK TO primary #1==
                        =======================
                        ====TO GET THE IP ADDRESS OF THE PRIMARY COMPUTER====/////////
                        ++++++++++++++++++++++++++++++++
                        =================================
                        ubuntu@primary:~$ ifconfig 
                        =  inet 192.168.64.4
                        ==============
                        <!-- ++++++++++++++++
                        ++OPEN WEB BROWSER======
                        192.168.64.4:8000 
                        = http://192.168.64.4:8000/
                        = SHOWS A SERVER WITH A LIST OF FILES|||||||||||||||||||||||||
                        ========================== -->
                        =====================
                        FROM Primary # 2 =server log
                        192.168.64.1 - - [15/Dec/2024 09:41:01] "GET / HTTP/1.1" 200 -
                        192.168.64.1 - - [15/Dec/2024 09:42:31] "GET /.bash_logout HTTP/1.1" 200 -
                        192.168.64.1 - - [15/Dec/2024 09:42:38] "GET /MJW2024/ HTTP/1.1" 200 -
                        192.168.64.1 - - [15/Dec/2024 09:42:43] "GET /sleep1000.txt HTTP/1.1" 200 -
                        192.168.64.1 - - [15/Dec/2024 09:42:47] "GET /newlover.txt HTTP/1.1" 200 -
                        192.168.64.1 - - [15/Dec/2024 09:42:51] "GET /mmm.txt HTTP/1.1" 200 -
                        ==========================
                        |||||||||||||||||||||||||||||||
                        |||||||||||||||||||||||||||||||
                        +++python is installed on every Ubuntu box++++
                        ========================
                        curl http://192.168.64.4:8000/ = <!DOCTYPE HTML> = contents of webpage 
                        ============
                        ==from primary server===
                       192.168.64.4 - - [13/Jan/2025 22:25:03] "GET / HTTP/1.1" 200 - - ======/////log from
                        connection///
                        ||||||||||||||||||||||||||||||
                        +++++++++++++++++++++++++++++
                        ||||||||||||||||||||||||||||||
                        curl https://GoOnlineDj.github.io/index.html
                        = all the contents OR SOURCE CODE of the webpage will be displayed on the terminal
                        =============================
                        ===============================
                        +++++++++++++++++++++++++++++
                        ///piping to a new file///
                        curl https://GoOnlineDj.github.io/index.html > Money-Power-Respect.txt
                        = the contents of the webpage will be saved in a file called Money-Power-Respect.txt
                        |||||||||||||||||||||||||||||||
                        +++++++++++++++++++++++++++++
                        |||||||||||||||||||||||||||||||
                        ===========================
                        ======================
                        ls -lash 
                        = 4.0K -rw-rw-r-- 1 ubuntu ubuntu 2.6K Dec 15 09:55 res.txt
                        =====================
                        ++Primary server 
                        = 192.168.64.4 - - [15/Dec/2024 09:55:32] "GET / HTTP/1.1" 200 -
                        ==========================
                        |||||||||||||||||||||||||||||||
                         +++++++++++++++++++++++++++++
                        |||||||||||||||||||||||||||||||
                        ===============================
                        +++++++++++++++++++++++++++++
                        ///new file created with name given NO PIPING to a existing file or a new file///////////
                        ===============================
                        curl -0 https://GoOnlineDj.github.io/index.html > Money-Power-Respect.txt
                        = the contents of the webpage will be saved in a file called Money-Power-Respect.txt
                        |||||||||||||||||||||||||||||||
                        =====================
                        ///KEEP THE SAME FILE NAME////
                        curl -O http://192.168.64.4:8000/mmm.txt = % Total % Received % Xferd Average Speed Time Time
                        Time Current
                        Dload Upload Total Spent Left Speed
                        100 237 100 237 0 0 71471 0 --:--:-- --:--:-- --:--:-- 79000

                        ////KEEP THE SAME FILE NAME////
                        =====================
                        <!-- from server = 192.168.64.4 - - [15/Dec/2024 10:05:02] "GET /mmm.txt HTTP/1.1" 200 - -->
                        ===================
                        //TESTING API POSTING REQUEST///
                        ++FROM Primary #1
                        ubuntu@primary:~$ curl -X POST http://192.168.64.4:8000/ =
                        <!DOCTYPE HTML>
                        <html lang="en">

                        <head>
                            <meta charset="utf-8">
                            <title>Error response</title>
                        </head>

                        <body>
                            <h1>Error response</h1>
                            <p>Error code: 501</p>
                            <p>Message: Unsupported method ('POST').</p>
                            <p>Error code explanation: 501 - Server does not support this operation.</p>
                        </body>

                        </html>

                        =======================
                        //from server
                        192.168.64.4 - - [15/Dec/2024 10:15:50] code 501, message Unsupported method ('POST')
                        =====
                        192.168.64.4 - - [15/Dec/2024 10:15:50] "POST / HTTP/1.1" 501 -
                        ===========================
                        ubuntu@primary:~$ curl -d "this is the post body" http://192.168.64.4:8000/ =
                        <!DOCTYPE HTML>
                        <html lang="en">

                        <head>
                            <meta charset="utf-8">
                            <title>Error response</title>
                        </head>

                        <body>
                            <h1>Error response</h1>
                            <p>Error code: 501</p>
                            <p>Message: Unsupported method ('POST').</p>
                            <p>Error code explanation: 501 - Server does not support this operation.</p>
                        </body>

                        </html>
                        =====================
                        //from server ==
                        192.168.64.4 - - [15/Dec/2024 10:19:09] code 501, message Unsupported method ('POST')
                        ====
                        192.168.64.4 - - [15/Dec/2024 10:19:09] "POST / HTTP/1.1" 501 -
                        ======================
                        <!-- ubuntu@primary:~$ curl -X PUT -d "this is the post body" http://192.168.64.4:8000/ = <!DOCTYPE HTML>
                        <html lang="en">
                        
                        <head>
                            <meta charset="utf-8">
                            <title>Error response</title>
                        </head>
                        
                        <body>
                            <h1>Error response</h1>
                            <p>Error code: 501</p>
                            <p>Message: Unsupported method ('PUT').</p>
                            <p>Error code explanation: 501 - Server does not support this operation.</p>
                        </body>
                        
                        </html> -->
                        =================
                        //server //
                        192.168.64.4 - - [15/Dec/2024 10:21:20] code 501, message Unsupported method ('PUT')
                        ====
                        192.168.64.4 - - [15/Dec/2024 10:21:20] "PUT / HTTP/1.1" 501 -
                        ===================
                        ubuntu@primary:~$ curl -X DELETE http://192.168.64.4:8000/ =
                        <!DOCTYPE HTML>
                        <html lang="en">

                        <head>
                            <meta charset="utf-8">
                            <title>Error response</title>
                        </head>

                        <body>
                            <h1>Error response</h1>
                            <p>Error code: 501</p>
                            <p>Message: Unsupported method ('DELETE').</p>
                            <p>Error code explanation: 501 - Server does not support this operation.</p>
                        </body>

                        </html>
                        ====================
                        //from server ==
                        192.168.64.4 - - [15/Dec/2024 10:23:55] code 501, message Unsupported method ('DELETE')
                        ==
                        192.168.64.4 - - [15/Dec/2024 10:23:55] "DELETE / HTTP/1.1" 501 -
                        ====================
                        +++++++To send a cookie using cURL ++++++
                        ubuntu@primary:~$ curl -b "name:Michael" -X PATCH http://192.168.64.4:8000/ =
                        <!DOCTYPE HTML>
                        <html lang="en">

                        <head>
                            <meta charset="utf-8">
                            <title>Error response</title>
                        </head>

                        <body>
                            <h1>Error response</h1>
                            <p>Error code: 501</p>
                            <p>Message: Unsupported method ('PATCH').</p>
                            <p>Error code explanation: 501 - Server does not support this operation.</p>
                        </body>

                        </html>
                        ================
                        ///from server ///
                        192.168.64.4 - - [15/Dec/2024 10:26:31] code 501, message Unsupported method ('PATCH')
                        =====
                        192.168.64.4 - - [15/Dec/2024 10:26:31] "PATCH / HTTP/1.1" 501 -
                        ==========================
                        ++++++CHECK OUT -c to save to the cookie.jar file====save all your site cookies==to the
                        cookie.jar========
                        ===================
                        ////Following redirects////
                        =============================
                        <!-- ubuntu@primary:~$ curl http://bit.ly/linux-cli = <html>
                        
                        <body><a href="https://btholt.github.io/complete-intro-to-linux-and-the-cli/">moved here</a></body> -->
                        ======================
                        //////cURL = EVERYTHING ON WEBSITE////

                        </html>ubuntu@primary:~$ curl -L http://bit.ly/linux-cli = YOU WILL GET EVERYTHING ON THE
                        WEBSITE =====
                        ========================
                        ==== -L will make cURL follow redirects=====
                        <!-- ubuntu@primary:~$ curl -L https://goonlinedj.github.io/M-J-W/M-J-W+index.html -->
                        ==========================
                        -H to send headers
                        curl -H "accept-language: en-US" -H "Authorization: bearer 1983" http://192.168.64.4:8000
                        ===================
                        +++++++++++++++++++++++
                        <!-- |bash ====DONT RUN THIS COMMAND  -->//be careful when curling and piping into bash
                        directly, check the file first then run the file.
                        +++++++++++++++++++++
                        //instead pipe data into file to check data///

                        <!-- curl curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh > my-file.sh
                        =====
                        cat my-file.sh = to check file. -->

                        ==================
                        ===Package Management & APT Basics====
                        +++++++++++++++++++
                        ====================
                        <!-- ==Ubuntu has APT = Advanced packageing tool
                        NOTE : Ubuntu can also use dpkg which is from Debian //since Ubuntu came from Debian its able to
                        use that packaging tool as well. -->
                        =====================
                        dpkg --help = Usage: dpkg [<option>...] <command></command>
                            Use 'apt' or 'aptitude' for user-friendly package management.
                            ============
                            ++++++++++++++
                            //installing aptitute///
                            ++TOOL for manageing apt =
                            <!-- ubuntu@primary:~$ sudo apt install aptitude -->
                            ================
                            ubuntu@primary:~$ aptitude
                            ================
                            ^c to exit out of aptitude
                            ===========================
                            //NOTE: apt-get install = old ways = might be more advance than APT.
                            //NOPE: APT install = new way
                            ===================
                            ubuntu@primary:~$ apt install lolcat = E: Could not open lock file
                            /var/lib/dpkg/lock-frontend - open (13: Permission denied)
                            E: Unable to acquire the dpkg frontend lock (/var/lib/dpkg/lock-frontend), are you root?
                            ========================
                            <!-- ubuntu@primary:~$ sudo !! --> =
                            sudo apt install lolcat
                            //Finish installing lolcat
                            <!-- lolcat --help -->
                            //some randome user made lolcat for us and put it on the apt registry so we can use it ///
                            cat williams.txt =
                            hi michael
                            hi michael isnt this so cool?
                            ============
                            <!-- ubuntu@primary:~$ lolcat williams.txt = hi michael
                            hi michael isnt this so cool? -->
                            ====================
                            ubuntu@primary:~$ ls -lash | lolcat
                            ++++++++++++++++++++++
                            =====================
                            //installing node.js //
                            ubuntu@primary:~$ node = Command 'node' not found, but can be installed with:
                            sudo apt install nodejs
                            ====================
                            <!-- ubuntu@primary:~$ sudo apt install nodejs -->
                            ===================
                            ubuntu@primary:~$ node = Node REPL = Welcome to Node.js v18.19.1.
                            Type ".help" for more information.
                            ==================
                            ===NODE JS===
                            .exit to exit
                            .help for help
                            =================
                            node -e "console.log('hello from node js')" = hello from node js
                            ================
                            //search for apt for node js///
                            <!-- ubuntu@primary:~$ apt search nodejs -->
                            =================
                            ubuntu@primary:~$ apt show nodejs = Package: nodejs
                            Version: 18.19.1+dfsg-6ubuntu5
                            Priority: extra
                            Section: universe/web
                            Origin: Ubuntu
                            =====================
                            ubuntu@primary:~$ apt show lolcat = Package: lolcat
                            Version: 100.0.1-3
                            Priority: extra
                            Section: universe/games
                            Origin: Ubuntu
                            ========================
                            <!-- //to clean up files that you dont use on the computer//
                            ubuntu@primary:~$ sudo apt autoremove = Reading package lists... Done
                            Building dependency tree... Done
                            Reading state information... Done
                            0 upgraded, 0 newly installed, 0 to remove and 1 not upgraded. -->
                            =======================

                            ++++++++++++++++
                            //////APT/////
                            the way that apt works is that is downloads a list of all the available packages to your
                            computer.
                            so if you do this update, it will actually go get the new copy of that.
                            ===================
                            ///to update packages///
                            <!-- ubuntu@primary:~$ sudo apt update -->
                            ======================
                            ubuntu@primary:~$ apt list --upgradable = Listing... Done
                            flash-kernel/noble-updates 3.107ubuntu13~24.04.1 arm64 [upgradable from:
                            3.107ubuntu9~24.04.3]
                            N: There are 2 additional versions. Please use the '-a' switch to see them.
                            =================
                            <!-- ///TO SEE A LIST OF ALL APT OR PACKAGES INSTALLED//
                            ubuntu@primary:~$ apt list
                            +++++++++++
                            COMMAND + F to search  -->
                            =====================
                            ///upgrading apt ///
                            ubuntu@primary:~$ sudo apt upgrade
                            ======================
                            ++++++++++++++++++
                            <!-- ubuntu@primary:~$ sudo apt full-upgrade = DOES THE FULL UPGRADE AND ALSO CLEAN UP AFTER ANY FILES THAT IS NOT BEING USED. -->
                            ==========================
                            ++++++++++++++++++++
                            //NOTE : APT is actually several tools combined together for example apt get , apt remove,
                            apt update , apt search, apt cache = APT is a higher level tool that is above the other
                            tools . so APT is using all of these tools under the hood.
                            ===================
                            <!-- ubuntu@primary:~$ sudo apt upgrade nodejs = will upgrade the node js package. -->
                            ======================
                            node -v = for node version
                            =======================
                            ubuntu@primary:~$ sudo apt update = it get a new list of all the packages that needs to be
                            updated.
                            =========================
                            ++++++++++++++++++++++
                            <!-- run update before upgrade  -->
                            ++++++++++++++++++++
                            ==========================
                            //NOTE: package manager for Mac is Homebrew
                            =========================
                            +++++++++++++++++++++++
                            =========SNAPS========
                            //snaps is able to sandbox the data so it wont break out////totally enclosed package.
                            =================
                            <!-- snaps are how Ubuntu install GUI apps, graphical user interface apps.
                            =====================
                            snap can install Visual Studio code,Spotify,Firefox,Chrome, and other kinds of different
                            tools. -->
                            ========================
                            NOTE: Debs can do whatever they want.
                            =======================
                            ==SNAPS ==the way they are packaged can be updated by the developer without going through
                            review.
                            =====================
                            SNAP WORKS FINE FOR INSTALLING THAT COMES WITH AUTO UPDATE BUT MIGHT HAVE MORE SECURITY.
                            ==================
                            <!-- ubuntu@primary:~$ sudo apt install snap daemon -->
                            daemon = the tool that executes the snap commands in the background that runs in the
                            background for snap.
                            =========================
                            ubuntu@primary:~$ cat williams.txt | lolcat
                            ================
                            ubuntu@primary:~$ snap info node
                            ======================
                            ubuntu@primary:~$ sudo snap install --channel=14/stable --classic node = node (14/stable)
                            14.20.1 from OpenJS Foundation (iojs✓) installed
                            =======================
                            --classic = classic flag allows it to break out of its box = means you can trust the
                            publisher.
                            --channel = lolcat had a channel by default but for node we use a --channel to say what
                            version of node we need.
                            =======================
                            ++++++++++++++++++++
                            <!-- SHELL SCRIPTS + WRITING YOUR OWN SCRIPTS -->
                            =====================
                            ====BASH SCRIPTS=====
                            ===================
                            ubuntu@primary:~$ vi gen_files.sh
                            ==========================
                            =writing bash script in vi
                            -p means if the file already exist dont error out.
                            text from vi =
                            <!-- mkdir -p ~/temp
                            cd ~/temp
                            touch file{1..10}.txt
                            echo done -->
                            ===================
                            esc + :wq to get out of vi
                            ==============
                            ubuntu@primary:~/temp$ . gen_files.sh
                            ===============
                            . gen_files.sh = to run script
                            ================
                            ubuntu@primary:~$ source gen_files.sh
                            ======================
                            source gen_files.sh = also can run the file. = RUN IN THE SAME PROCESS SO IT CHANGES THE
                            DIRECTORY.
                            ======================
                            <!-- ubuntu@primary:~$ bash gen_files.sh
                            =================
                            bash gen_files.sh = SEEMS TO BE BETTER BECAUSE IT DOESNT CHANGE THE DIRECTORY.
                            =======================
                            bash gen_files.sh = STAY IN SAME DIRECTORY = IT RUNS ANOTHER PROCESS IN THE BACKGROUND.
                            ===================
                            sh = script file. -->
                            ================
                            +++++++++++++++++++
                            =====Hashbang========
                            <!-- #! /bin/bash -->
                            ///this line that should be placed at the top of the vi window tell bash use bash to
                            interpret the file. or we could have said use python to interpret the file.
                            ====================
                            +++++example+++++++
                            ================
                            mv gen_files.sh gen_files
                            ls -lash =4.0K -rw-rw-r-- 1 ubuntu ubuntu 72 Dec 15 16:10 gen_files
                            ==
                            ubuntu@primary:~$ chmod +x gen_files
                            ls -lash = 4.0K -rwxrwxr-x 1 ubuntu ubuntu 72 Dec 15 16:10 gen_files
                            =========================
                            NOW ITS AN EXECUTABLE FILE.
                            ===================
                            ubuntu@primary:~$ ./gen_files = done
                            =====================
                            because of the hashband it knew how to run the script.
                            =======================

                            ////node example///
                            ubuntu@primary:~$ which node = /usr/bin/node
                            ==================
                            <!-- ubuntu@primary:~$ vi node_test = #! /usr/bin/node
                            
                            console.log('this is running from node.js'); -->
                            =======================
                            chmod +x node_test
                            ==================
                            <!-- ubuntu@primary:~$ ./node_test = this is running from node.js  -->
                            ==========================
                            +++++++++++++++++++++++
                            =====Path & Variables=====
                            ========================
                            ====$PATH ===
                            echo $PATH =
                            /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
                            =========================
                            ubuntu@primary:~$ ls /snap/bin = multipass-sshfs.env node.npm node.yarn npm yarn
                            node node.npx node.yarnpkg npx yarnpkg
                            =====================
                            <!-- ./ = i want you to run something that is in this directory. -->
                            ===================
                            mkdir my_bin
                            mv node_test my_bin
                            mv gen_files my_bin
                            cd my_bin
                            ubuntu@primary:~/my_bin$ ls -lash = total 16K
                            4.0K drwxrwxr-x 2 ubuntu ubuntu 4.0K Dec 15 16:29 .
                            4.0K drwxr-xr-x 22 ubuntu ubuntu 4.0K Dec 15 16:29 ..
                            4.0K -rwxrwxr-x 1 ubuntu ubuntu 72 Dec 15 16:10 gen_files
                            4.0K -rwxrwxr-x 1 ubuntu ubuntu 63 Dec 15 16:19 node_test
                            ====================
                            <!-- //NOW WE HAVE TO PUT THIS FOLDER ON OUR PATH// -->
                            ================
                            ubuntu@primary:~/my_bin$ cd ..
                            ===================
                            vi .bashrc
                            =================
                            export PATH=~/my_bin:$PATH
                            ==========
                            ~/ = add to this Path
                            $PATH = keep current path and add to it.
                            =====================
                            <!-- :wq ==be careful not to include in file...when exiting..  -->
                            =================
                            ubuntu@primary:~$ echo $PATH =
                            /home/ubuntu/my_bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
                            =============
                            my_ bin IS NOW INCLUDED IN THE $PATH
                            ====================
                            ++so now we should be able to run the script without . or source or bash = i should be able
                            to run the program using only the program name.
                            ===================
                            ubuntu@primary:~$ ls my_bin = gen_files node_test
                            =============
                            gen_files = done
                            node_test = this is running from node.js
                            =====================
                            # = this is how you comment in a bash script.
                            =================
                            vi my_bin/gen_files = to add comments for Others
                            ===============
                            #this is a comment. = to be placed in the script
                            ===============
                            ++++++++++++++++++
                            ===CREATING VARIABLE IN BASH=====
                            <!-- DESTINATION="~/temp"
                            mkdir -p $DESTINATION
                            cd $DESTINATION -->

                            ====================
                            #! /bin/bash


                            DESTINATION="~/temp"
                            FILE_PREFIX=file

                            mkdir -p $DESTINATION
                            cd $DESTINATION


                            #this is a comment.


                            touch ${FILE_PREFIX}{1..10}.txt
                            echo done #this is a comment.
                            ======================
                            gen_files = done
                            ===================
                            <!-- +++++++++++++++++++++++
                            ${} = accessing a variable 
                            $() = run a sub command and return.
                            +++++++++++++++++++++++++ -->
                            =========================
                            =========================
                            =======Arguments=========
                            $0 = invoked by gen_files
                            $1 = first arugument being provided from user.
                            ====================
                            giving Argument to the bash script =
                            DESTINATION=$1 in vi editor
                            ====================

                            <!-- ++++++++++++++
                            +++TO RECEIEVE USER INPUT INTERACTIVELY+++++ -->
                            ==================
                            read = for user input
                            -p = prompt
                            ===================
                            ubuntu@primary:~$ vi my_bin/gen_files
                            =================

                            read -p "Enter a file prefix: " FILE_PREFIX
                            ============
                            :wq
                            ==================
                            ubuntu@primary:~$ gen_files another_gen_files_folder
                            =======
                            Enter a file prefix: value = done
                            ===================
                            ubuntu@primary:~$ ls another_gen_files_folder/ = value1.txt GirlMeetGuy.txt value4.txt value6.txt
                            value8.txt
                            value10.txt value3.txt value5.txt value7.txt value9.txt
                            ==========================

                            <!-- 
                        In shell scripting (like Bash), the case statement is concluded with esac, which is "case" spelled
                            backward.
                            #!/bin/bash
                            
                            echo "Enter a number between 1 and 3: "
                            read num
                            
                            case $num in
                            1) echo "You entered One" ;;
                            2) echo "You entered Two" ;;
                            3) echo "You entered Three" ;;
                            *) echo "Invalid number" ;;
                            esac
                            =================
                            In this script, based on the input number, the corresponding message is printed, and the case statement is neatly
                            finished with esac
                            ================ -->
                            ===================
                            <!-- ++++++++++++++++++++++++
                                                        ====Conditionals: if statement & tests ======
                                                        ++++++++++++++++++++++++++ -->
                            =========================
                            //inside the if statement//
                            -z = empty string
                            if [] = for if statement
                            [] = rearange the arugument in the bracket to a test statement.
                            =======================
                            ubuntu@primary:~$ vi my_bin/gen_files
                            =====================
                            if [ -z $DESTINATION ]; then
                            echo "no path provided, defaulting to ~/temp"
                            DESTINATION=temp
                            fi
                            =======================
                            :wq
                            =============
                            <!-- ubuntu@primary:~$ test -z "" -->
                            ============
                            $? = last program return value
                            ========================
                            //NOTE//ubuntu@primary:~$ echo $0 = bash //
                            =======================
                            <!-- ubuntu@primary:~$ echo $? = 0 -->
                            ======================
                            ++++++++++++++++++++++
                            +++++++++++++++
                            man test = manual for test
                            ++++++++++++++++
                            ++++++++++++++++++
                            ===============
                            ubuntu@primary:~$ gen_files = Enter a file prefix: lol = no path provided, defaulting to
                            ~/temp
                            done
                            ==================
                            ubuntu@primary:~$ ls ~/temp = ok = files are There
                            =======================
                            ++++++++++++++++++
                            ====test=======
                            <!-- test 15 -eq 15 
                            echo $? = 0 -->
                            ==============
                            test 15 -eq 14
                            echo $? = 1
                            ==============
                            +++++++++++++
                            <!-- 0 = true 
                            1 = false  -->
                            +++++++++++++++
                            =================
                            test 15 -eq 14 && echo "is true"
                            echo $? = 1
                            ============
                            test 15 -eq 15 && echo "is true" = is true
                            echo $? = 0
                            =================
                            test Michael = Michael && echo "this is true" = this is true
                            echo $? = 0
                            ================
                            test Michael = michael && echo "this is true"
                            echo $? = 1
                            ==================
                            test 15 -gt 10 && echo "yes" = yes
                            test 15 -lt 10 && echo "yes" = NO RESPOND FROM echo
                            =====================
                            test 15 -ge 10 && echo "yes" = yes
                            test 10 -ge 15 && echo "yes" = NO RESPOND FROM echo
                            =====================
                            test 15 -le 10 && echo "yes" = NO RESPOND FROM echo
                            test 10 -le 15 && echo "yes" = yes
                            ======================
                            +++++++++++++
                            +++++++++++
                            -e = does file exist?
                            ++++++++++++
                            test -e ~/williams.txt && echo "yes" = yes
                            =====================
                            +++++++++++++
                            +++++++++++
                            -w = does file exist & can i write to it as this current user.
                            ++++++++++++
                            =================
                            test -w ~/lover.txt && echo "yes" = 0 -rw-r--r-- 1 root root 0 Dec 13 21:32 lover.txt = NO
                            RESPOND FROM echo
                            ===============
                            <!-- test -w ~/status.txt && echo "yes" = 4.0K -rw-rw-r-- 1 ubuntu ubuntu 98 Dec 14 18:45
                            status.txt = yes -->
                            =====================
                            ubuntu@primary:~$ cd my_bin/
                            ubuntu@primary:~/my_bin$ ls -lash = total 16K
                            4.0K drwxrwxr-x 2 ubuntu ubuntu 4.0K Dec 15 18:32 .
                            4.0K drwxr-xr-x 26 ubuntu ubuntu 4.0K Dec 15 18:32 ..
                            4.0K -rwxrwxr-x 1 ubuntu ubuntu 320 Dec 15 18:32 gen_files
                            4.0K -rwxrwxr-x 1 ubuntu ubuntu 63 Dec 15 16:19 node_test
                            ====================
                            <!-- ubuntu@primary:~/my_bin$ touch check_number -->
                            ubuntu@primary:~/my_bin$ ls -lash = total 16K
                            4.0K drwxrwxr-x 2 ubuntu ubuntu 4.0K Dec 15 19:32 .
                            4.0K drwxr-xr-x 26 ubuntu ubuntu 4.0K Dec 15 18:32 ..
                            0 -rw-rw-r-- 1 ubuntu ubuntu 0 Dec 15 19:32 check_number
                            4.0K -rwxrwxr-x 1 ubuntu ubuntu 320 Dec 15 18:32 gen_files
                            4.0K -rwxrwxr-x 1 ubuntu ubuntu 63 Dec 15 16:19 node_test
                            =====================
                            <!-- ubuntu@primary:~/my_bin$ chmod +x check_number
                            ubuntu@primary:~/my_bin$ ls -lash = total 16K
                            4.0K drwxrwxr-x 2 ubuntu ubuntu 4.0K Dec 15 19:32 .
                            4.0K drwxr-xr-x 26 ubuntu ubuntu 4.0K Dec 15 18:32 ..
                            0 -rwxrwxr-x 1 ubuntu ubuntu 0 Dec 15 19:32 check_number
                            4.0K -rwxrwxr-x 1 ubuntu ubuntu 320 Dec 15 18:32 gen_files
                            4.0K -rwxrwxr-x 1 ubuntu ubuntu 63 Dec 15 16:19 node_test = check_number = color = green = ok -->
                            =======================

                            ubuntu@primary:~/my_bin$ vi check_number

                            =================
                            #! /bin/bash


                            if [ $1 -gt 10 ]; then
                            echo "greater than ten"
                            elif [ $1 -lt 10 ]; then
                            echo "less than ten"
                            else
                            echo "equals 10"
                            fi

                            =================
                            :wq
                            ================================
                            <!-- ubuntu@primary:~/my_bin$ check_number 10 = equals 10
                            ===========
                            ubuntu@primary:~/my_bin$ check_number 17 = greater than ten 
                            ====================
                            ubuntu@primary:~/my_bin$ check_number 7 = less than ten
                            ======================= -->
                            //NOTE: in vi #! /bin/bash :wq and reopen the file = to get bash color codes in vi.///
                            =============
                            ubuntu@primary:~/my_bin$ vi smiley

                            ========================================
                            #! /bin/bash




                            <!-- case $1 in
                            "smile")
                            echo ":)"
                            ;;
                            "sad")
                            echo ":("
                            ;;
                            "laugh")
                            echo ":D"
                            ;;
                            *)
                            echo "I DONT KNOW THAT ONE YET!"
                            ;;
                            esac

                            ==================
                            :wq
                            ==============
                            ubuntu@primary:~/my_bin$ smiley smile = :)
                            ubuntu@primary:~/my_bin$ smiley laugh = :D
                            ubuntu@primary:~/my_bin$ smiley im learing cool Linux stuff = I DONT KNOW THAT ONE YET! -->
                            ======================
                            +++++++++++++++++++++++
                            ======Loops & Arrays=======
                            ++++++++++++++++++++++++++
                            ========================
                            friends=() = array 
                             [*] = all items in array
                             ${#friends[*]} = array Length
                             ${friends[1]} = friend at index 1
                             ==================
                             ubuntu@primary:~$ cd my_bin/ 
                             ubuntu@primary:~/my_bin$ touch friends
                             ubuntu@primary:~/my_bin$ ls = check_number  friends  gen_files  node_test  smiley
                             ubuntu@primary:~/my_bin$ chmod +x friends
                             ubuntu@primary:~/my_bin$ vi friends

                             ================
                             #! /bin/bash



friends=(Angel Value CEO "Michael J Williams" Money)

echo my second friend is ${friends[1]}


for friend in ${friends[*]}
do      
        echo friend: $friend
        
done    

echo "i have ${#friends[*]} friends"


=============================
:wq
======================
ubuntu@primary:~/my_bin$ friends = 
my second friend is Value
friend: Angel
friend: Value
friend: CEO
friend: Michael
friend: J
friend: Williams
friend: Money
i have 5 friends
=================================
++++++++++++++++++++++++
====WHILE LOOP======
$(()) = converts to a basic program = let = which does math = let does modular work and return the value.
======================
Unix is an operating system that was built on the idea of modular design, which means that each tool or command is designed to do one thing well. This philosophy is known as the Unix philosophy
====================================

ubuntu@primary:~/my_bin$ touch guess
ubuntu@primary:~/my_bin$ chmod +x guess
ubuntu@primary:~/my_bin$ vi guess
======================
#! /bin/bash

NUM_TO_GUESS=$(( $RANDOM % 10 + 1 ))
GUESSED_NUM=0

echo "guess a number between 1 and 10"

while [ $NUM_TO_GUESS -ne $GUESSED_NUM ] 
do
        read -p "your guess: " GUESSED_NUM
        
done    

echo "you got it!"


===========================

:wq
===============
ubuntu@primary:~/my_bin$ guess 

guess a number between 1 and 10
your guess: 2
your guess: 5
your guess: 7
you got it!
======================
=================++++++++++++========
read -p "your guess: " GUESSED_NUM 
/// there is no dollar sign because we are giving the value of GUESSED_NUM to read if it had the dollar sign the value to GUESSED_NUM would be 0
====================
++++++++++++++++++++++++++++++++++++++++
=========cron================
==============================
cron = you have some task and you want it to run at a set interval
====================================

ubuntu@primary:~$ cd /etc/
===============
ubuntu@primary:~$ cd /etc/cron. = cron.d/       cron.hourly/  cron.weekly/  
cron.daily/   cron.monthly/ cron.yearly/
==================
ubuntu@primary:/etc$ cd cron.daily/
ubuntu@primary:/etc/cron.daily$ ls = apport  apt-compat  aptitude  dpkg  logrotate  man-db  sysstat
=========================
//ANYTHING THAT IS PUT IN THE cron FOLDER NEEDS TO BE AN EXECUTALE FILE.
==========================
ubuntu@primary:~/my_bin$ vi make_new_file_now = TO CREATE A NEW FILE. = using vi = didnt use touch to create file.
=====================
ubuntu@primary:~/my_bin$ ls = 
check_number  friends  gen_files  guess  make_new_file_now  node_test  smiley
============
ubuntu@primary:~/my_bin$ chmod +x make_new_file_now 
===================
+++++++++++++++++++++++++++++
ubuntu@primary:~/my_bin$ vi make_new_file_now
===================
#! /bin/bash



mkdir -p ~/temp-files
cd ~/temp-files
touch file-$(date +%s).txt
==================
:wq
=================
ubuntu@primary:~/my_bin$ date = Mon Dec 16 10:58:46 EST 2024
==============
ubuntu@primary:~/my_bin$ date +%s = 1734364763
===================
ubuntu@primary:~/my_bin$ make_new_file_now = ubuntu@primary:~$ ls temp-files = 
file-1734364665.txt  file-1734364719.txt
=========================
|||||||||||||||||||||||||
=========================
///TO SET cron for every hour////
================
ubuntu@primary:~$ crontab -e = 
no crontab for ubuntu - using an empty one

Select an editor.  To change later, run 'select-editor'.
  1. /bin/nano        <---- easiest
  2. /usr/bin/vim.basic
  3. /usr/bin/vim.tiny
  4. /bin/ed

Choose 1-4 [2]: 
=============================
//in VIM////
* * * * * /home/ubuntu/my_bin/make_new_file_now
the first * = minutes = 2 every 2 mins everyhour, 2,25 = every 2 min and 25 min of every hour.
the second * = hours
the third * = day of the month 
the forth * = which month to run
the fifth * =  day of the week to run 
/30 = every 30 minutes 
@daily
@reboot
=============================
///from vim///
=====================
*/2 * * * * /home/ubuntu/my_bin/make_new_file_now = run every 2 minutes.
=========================
:wq
==================
crontab -e = auto restart the cron tab once exit 
======================
crontab -u ubuntu -e = to run as another user other than root
======================
////to RUN AS ROOT///
sudo crontab -u root -e 
=========================
//in general you want to run crontab as another user other than root.
========================
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++++++
====HOW TO CUSTOMIZE YOUR SHELL==========
++++++++++++++++++++++++++++++++++
//THIS PROMPT = ubuntu@primary:~$ = IS CUSTOMIZABLE
////its connected to a VARIABLE called PS1 
=======================
ubuntu@primary:~$ echo $PS1 = \[\e]0;\u@\h: \w\a\]${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$
==========================
ubuntu@primary:~$ PS1="MJW+Linux: "  = MJW+Linux: 
========================
///code to change PROMPT 
+++++++++++++++
MJW+Linux: curl https://raw.githubusercontent.com/riobard/bash-powerline/master/bash-powerline.sh > ~/.bash-powerline.sh
++++++++++++++
MJW+Linux: cat .bash-powerline.sh = #!/usr/bin/env bash

## Uncomment to disable git info
#POWERLINE_GIT=0
======================

MJW+Linux: vi .bashrc
++++++++++
//in .bashrc ////
=================
source ~/.bash-powerline.sh
=================
:wq
=================
MJW+Linux: source .bash-powerline.sh = ~ $ 
=======
///WORKS FINE/////
=======================
~ $ mkdir my-git-project
~ $ cd my-git-project/
===========
~/my-git-project $ git init
hint: Using 'master' as the name for the initial branch. This default branch name
hint: is subject to change. To configure the initial branch name to use in all
hint: of your new repositories, which will suppress this warning, call:
hint: 
hint: 	git config --global init.defaultBranch <name>
hint: 
hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
hint: 'development'. The just-created branch can be renamed via this command:
hint: 
hint: 	git branch -m <name>
Initialized empty Git repository in /home/ubuntu/my-git-project/.git/
==============
~/my-git-project ⑂master $ git checkout -b another-git-project = Switched to a new branch 'another-git-project' 
======
~/my-git-project ⑂another-git-project $ 
=======
\e[32m = green = IN BASH
=============
~ $ echo -e "this is how you change the color of a text \e[32mGreen " = this is how you change the color of a text Green 
==========================
/////////////////////////
============================
THANK YOU + Brian Holt & Frontend Maters 
==========================
/////////////////////////
============================
reset setting to redownload package.
 sudo dpkg --configure -a
 =================
 ////show which programs are using the most space on disk
 sudo du -sh /*
 ===============
Identify the Flash Drive:
 lsblk
 ==========
 





 ====
/usr/bin $ sudo tcpdump --help

====
///to delete folder 
~ $ sudo rm -rf /usr/bin/vim.basic = GONE

///list all installed programs
dpkg --get-selections

//list all installed packages
dpkg --get-selections | grep -v deinstall


//check install programs 
apt list --installed









